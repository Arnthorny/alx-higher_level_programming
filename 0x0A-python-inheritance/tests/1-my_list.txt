The ``1-my_list`` module
==============================

Using ``MyList`` class
---------------------

This module contains the MyList class
that inherits from the `list` class:

Import the class from the module:
	>>> MyList = __import__("1-my_list").MyList

Test that class has a docstring:
    >>> len(MyList.__doc__) > 1
    True

Test that class method has a docstring:
    >>> len(MyList.print_sorted.__doc__) > 1
    True

Print list of regular values:
        >>> my_list = MyList()
	>>> my_list.append(7)
        >>> my_list.append(25)
        >>> my_list.append(4)
        >>> my_list.append(2)
        >>> my_list.append(9)
	>>> print(my_list)
	[7, 25, 4, 2, 9]
        >>> my_list.print_sorted()
        [2, 4, 7, 9, 25]


Print list containing negative values:
        >>> my_list = MyList()
	>>> my_list.append(12)
        >>> my_list.append(-5)
        >>> my_list.append(1)
        >>> my_list.append(-3)
        >>> my_list.append(7)
	>>> print(my_list)
	[12, -5, 1, -3, 7]
        >>> my_list.print_sorted()
        [-5, -3, 1, 7, 12]
	

Print empty list:
        >>> my_list = MyList()
	>>> print(my_list)
	[]
        >>> my_list.print_sorted()
        []

Just print list:
        >>> my_list = MyList()
	>>> my_list.append(12)
        >>> my_list.append(34)
        >>> my_list.append(98)
        >>> my_list.append(-52)
        >>> my_list.append(72)
	>>> print(my_list)
	[12, 34, 98, -52, 72]

Print preexisting list:
	>>> a_list = [7, 3, 2, 81, 44]
        >>> my_list = MyList(a_list)
	>>> my_list.append(19)
        >>> my_list.append(25)
        >>> my_list.append(4)
	>>> print(my_list)
	[7, 3, 2, 81, 44, 19, 25, 4]
        >>> my_list.print_sorted()
        [2, 3, 4, 7, 19, 25, 44, 81]

Print and sort list of one element:
        >>> my_list = MyList([1])
	>>> print(my_list)
	[1]
        >>> my_list.print_sorted()
        [1]


Print and sort list of two elements:
        >>> my_list = MyList([1])
	>>> my_list.append(-5)
	>>> print(my_list)
	[1, -5]
        >>> my_list.print_sorted()
        [-5, 1]
	

Print list then remove some values:
	>>> a_list = [5, -6, -9, 0, 12]
        >>> my_list = MyList(a_list)
	>>> print(my_list)
	[5, -6, -9, 0, 12]
	>>> my_list.print_sorted()
	[-9, -6, 0, 5, 12]
	>>> my_list.remove(12)
        >>> my_list.pop()
	0
        >>> my_list.append(-3)
	>>> print(my_list)
	[5, -6, -9, -3]
        >>> my_list.print_sorted()
        [-9, -6, -3, 5]
	
Instantiate class with non-iterable:
	>>> my_list = MyList(1.4)
	Traceback (most recent call last):
		...
	TypeError: 'float' object is not iterable
